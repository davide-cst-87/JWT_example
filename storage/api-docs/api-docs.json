{
    "openapi": "3.0.0",
    "info": {
        "title": "ETL System API",
        "description": "This is the API documentation for ETL System REST API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/admin/scans/{scan}": {
            "get": {
                "tags": [
                    "Admin Scans"
                ],
                "summary": "Get a specific scan by ID (only within the admin's company)",
                "operationId": "91b71b3f99183cb0e49bc0f428e18fe0",
                "parameters": [
                    {
                        "name": "scan",
                        "in": "path",
                        "description": "ID of the scan to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 83
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scan retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 83
                                                },
                                                "badge_id": {
                                                    "type": "string",
                                                    "example": "85bdb85"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "entrance"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-03-30 00:51:44"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 41
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Davide2.0"
                                                        },
                                                        "surname": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Scan retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden – scan does not belong to admin's company"
                    },
                    "404": {
                        "description": "Scan not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Scans"
                ],
                "summary": "Delete a scan that belongs to the admin's company",
                "operationId": "51800a76510b477c81e8a05dbca8f646",
                "parameters": [
                    {
                        "name": "scan",
                        "in": "path",
                        "description": "ID of the scan to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 83
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scan deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Scan deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden – scan does not belong to admin's company"
                    },
                    "404": {
                        "description": "Scan not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Scans"
                ],
                "summary": "Update a scan's type or notes (only allowed fields are accepted)",
                "operationId": "1e2347fc63ce3944a3492e8a69f95bc0",
                "parameters": [
                    {
                        "name": "scan",
                        "in": "path",
                        "description": "ID of the scan to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 83
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "entrance",
                                            "exit"
                                        ],
                                        "example": "exit"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Modified by admin",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Scan modified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 83
                                                },
                                                "badge_id": {
                                                    "type": "string",
                                                    "example": "85bdb85"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "exit"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Modified by admin"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-03-30 00:51:44"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 41
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Davide2.0"
                                                        },
                                                        "surname": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Scan modified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden – scan does not belong to admin's company"
                    },
                    "422": {
                        "description": "Validation error – invalid or unexpected fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid fields provided: badge_id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/scans": {
            "get": {
                "tags": [
                    "Admin Scans"
                ],
                "summary": "Get paginated scans for the admin's company",
                "operationId": "685a2daf27d60fd559809dc613370cb3",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scans retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Scans retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Scan"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://your-app.test/api/admin/scans?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://your-app.test/api/admin/scans?page=5"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://your-app.test/api/admin/scans?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://your-app.test/api/admin/scans"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Scans"
                ],
                "summary": "Manually create a scan for a user (admin-only)",
                "operationId": "e71f5262103aa0f9f8ad33bae2cb788e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "type",
                                    "notes"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 41
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "entrance",
                                            "exit"
                                        ],
                                        "example": "entrance"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "manually added for hardware issue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Scan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 95
                                                },
                                                "badge_id": {
                                                    "type": "string",
                                                    "example": "85bdb85"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "entrance"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "manually added for hardware issue"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-04-05 11:33:42"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 41
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Davide2.0"
                                                        },
                                                        "surname": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Scan created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized – user does not belong to admin's company",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error – user_id not found or missing fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The selected user id is invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected user id is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/my-scan": {
            "get": {
                "tags": [
                    "Scans"
                ],
                "summary": "Get authenticated user's scans (entrance or exit)",
                "operationId": "3926df16029a5b8942ee9c7c83ff8ff3",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by scan type (entrance or exit)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "entrance",
                                "exit"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for filtering (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for filtering (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scans retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data retrieved"
                                        },
                                        "scans": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Scan"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/my-scan/{id}": {
            "get": {
                "tags": [
                    "Scans"
                ],
                "summary": "Get a specific scan by ID (only if owned by the authenticated user)",
                "operationId": "e20bff4c452a285db047c1892ff4df80",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the scan to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scan retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data retrieved"
                                        },
                                        "scan": {
                                            "$ref": "#/components/schemas/Scan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Scan not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/log-scan": {
            "post": {
                "tags": [
                    "Scans"
                ],
                "summary": "Log a scan (entrance or exit)",
                "operationId": "e870b402e1ec7e4e0b69890ead68220a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "badge_id",
                                    "type"
                                ],
                                "properties": {
                                    "badge_id": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "entrance",
                                            "exit"
                                        ],
                                        "example": "entrance"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Came in late"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Scan logged successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Scan logged successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user/timeOff/{id}": {
            "get": {
                "tags": [
                    "Time Off"
                ],
                "summary": "Get a specific time off request",
                "description": "Returns a specific time off request by ID if it belongs to the authenticated user.",
                "operationId": "getTimeOffRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the time off request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Time off request found and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request retrieved successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TimeOffRequestResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized – the time off request does not belong to the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time off request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request cannot be found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Time Off"
                ],
                "summary": "Delete a time off request",
                "description": "Deletes a time off request if it belongs to the authenticated user.",
                "operationId": "deleteTimeOffRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the time off request to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Time off request successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time Off Request successfully deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized — the request does not belong to the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time off request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time Off Request cannot be found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Time Off"
                ],
                "summary": "Update a time off request",
                "description": "Allows the authenticated user to update their own time off request, only if the start date has not passed. Only type, start_date, end_date, and note can be modified.",
                "operationId": "updateTimeOffRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the time off request to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "holiday",
                                            "sickness",
                                            "other"
                                        ],
                                        "example": "sickness"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-05"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Updated note: doctor's appointment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Time off request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TimeOffRequestResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized or modification not allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Time off request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "You are not allowed to modify the status of a time off request."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/timeOff": {
            "get": {
                "tags": [
                    "Time Off"
                ],
                "summary": "List time off requests for the authenticated user",
                "description": "Returns a paginated list of time off requests belonging to the currently authenticated user. Supports optional filtering by status, type, and date range, and allows sorting.",
                "operationId": "getUserTimeOffRequests",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status: approved, pending, or rejected",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "approved",
                                "pending",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type: holiday, sickness, or other",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "holiday",
                                "sickness",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by minimum start date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter by maximum end date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_range[start]",
                        "in": "query",
                        "description": "Start of custom date range filter (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_range[end]",
                        "in": "query",
                        "description": "End of custom date range filter (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by one or more fields. Prefix with '-' for descending. Allowed: type, status, created_at (e.g., sort=-created_at,type)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "-created_at,type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off requests retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TimeOffRequestResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Time Off"
                ],
                "summary": "Create a new time off request",
                "description": "Allows the authenticated user to request time off. Fields like status and approval are handled by the admin and not included here.",
                "operationId": "storeTimeOffRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "holiday",
                                            "sickness",
                                            "other"
                                        ],
                                        "example": "holiday"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-10"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Family holiday"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Time off request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TimeOffRequestResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected type is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Scan": {
                "title": "Scan",
                "description": "Represents a user scan event",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "badge_id": {
                        "type": "string",
                        "example": "ABC123XYZ"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "entrance",
                            "exit"
                        ],
                        "example": "entrance"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Came in late",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-30 00:51:44"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "41"
                            },
                            "name": {
                                "type": "string",
                                "example": "Mario"
                            },
                            "surname": {
                                "type": "string",
                                "example": "Rossi"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TimeOffRequestResource": {
                "title": "Time Off Request Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "holiday"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-10"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-09T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin Scans",
            "description": "Admin Scans"
        },
        {
            "name": "Scans",
            "description": "Scans"
        },
        {
            "name": "Time Off",
            "description": "Time Off"
        }
    ]
}